### YamlMime:ManagedReference
items:
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService
  commentId: T:IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService
  id: IIdentityServerService
  parent: IdentityServer4.Contrib.HttpClientService.Infrastructure
  children:
  - IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions)
  langs:
  - csharp
  - vb
  name: IIdentityServerService
  nameWithType: IIdentityServerService
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService
  type: Interface
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Infrastructure/IdentityServer/Interfaces/IIdentityServerService.cs
      branch: feature/PasswordTokenRequest
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: IIdentityServerService
    path: ../src/IdentityServer4.Contrib.HttpClientService/Infrastructure/IdentityServer/Interfaces/IIdentityServerService.cs
    startLine: 10
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Infrastructure
  summary: "\nAbstraction for an access token service.\n"
  example: []
  syntax:
    content: public interface IIdentityServerService
    content.vb: Public Interface IIdentityServerService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions)
  commentId: M:IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions)
  id: GetTokenResponseAsync(IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions)
  parent: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService
  langs:
  - csharp
  - vb
  name: GetTokenResponseAsync(IIdentityServerOptions)
  nameWithType: IIdentityServerService.GetTokenResponseAsync(IIdentityServerOptions)
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync(IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions)
  type: Method
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Infrastructure/IdentityServer/Interfaces/IIdentityServerService.cs
      branch: feature/PasswordTokenRequest
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: GetTokenResponseAsync
    path: ../src/IdentityServer4.Contrib.HttpClientService/Infrastructure/IdentityServer/Interfaces/IIdentityServerService.cs
    startLine: 17
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Infrastructure
  summary: "\nRetrieves a <xref href=\"IdentityModel.Client.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref>  from the configured Identity Server\n"
  example: []
  syntax:
    content: Task<TokenResponse> GetTokenResponseAsync(IIdentityServerOptions options)
    parameters:
    - id: options
      type: IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions
      description: The token service options
    return:
      type: System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
      description: A <xref href="IdentityModel.Client.TokenResponse" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function GetTokenResponseAsync(options As IIdentityServerOptions) As Task(Of TokenResponse)
  overload: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync*
references:
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure
  commentId: N:IdentityServer4.Contrib.HttpClientService.Infrastructure
  name: IdentityServer4.Contrib.HttpClientService.Infrastructure
  nameWithType: IdentityServer4.Contrib.HttpClientService.Infrastructure
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure
- uid: IdentityModel.Client.TokenResponse
  commentId: T:IdentityModel.Client.TokenResponse
  isExternal: true
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
  name: GetTokenResponseAsync
  nameWithType: IIdentityServerService.GetTokenResponseAsync
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.IIdentityServerService.GetTokenResponseAsync
- uid: IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions
  commentId: T:IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions
  parent: IdentityServer4.Contrib.HttpClientService.Models
  name: IIdentityServerOptions
  nameWithType: IIdentityServerOptions
  fullName: IdentityServer4.Contrib.HttpClientService.Models.IIdentityServerOptions
- uid: System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<IdentityModel.Client.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of IdentityModel.Client.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Contrib.HttpClientService.Models
  commentId: N:IdentityServer4.Contrib.HttpClientService.Models
  name: IdentityServer4.Contrib.HttpClientService.Models
  nameWithType: IdentityServer4.Contrib.HttpClientService.Models
  fullName: IdentityServer4.Contrib.HttpClientService.Models
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
