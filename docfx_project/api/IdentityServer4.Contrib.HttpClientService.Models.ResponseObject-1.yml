### YamlMime:ManagedReference
items:
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  commentId: T:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  id: ResponseObject`1
  parent: IdentityServer4.Contrib.HttpClientService.Models
  children:
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  - IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode
  langs:
  - csharp
  - vb
  name: ResponseObject<TResponseBody>
  nameWithType: ResponseObject<TResponseBody>
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>
  type: Class
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: ResponseObject
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 12
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nAn object containing information about the response of the current request.\n"
  example: []
  syntax:
    content: public class ResponseObject<TResponseBody>
    typeParameters:
    - id: TResponseBody
      description: Type of the body of the response.
    content.vb: Public Class ResponseObject(Of TResponseBody)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ResponseObject(Of TResponseBody)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody)
  name.vb: ResponseObject(Of TResponseBody)
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers
  id: Headers
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ResponseObject<TResponseBody>.Headers
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.Headers
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: Headers
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 17
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe <xref href=\"System.Net.Http.Headers.HttpResponseHeaders\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HttpResponseHeaders Headers { get; }
    parameters: []
    return:
      type: System.Net.Http.Headers.HttpResponseHeaders
    content.vb: Public ReadOnly Property Headers As HttpResponseHeaders
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers*
  nameWithType.vb: ResponseObject(Of TResponseBody).Headers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).Headers
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType
  id: BodyAsType
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: BodyAsType
  nameWithType: ResponseObject<TResponseBody>.BodyAsType
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsType
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: BodyAsType
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 22
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe body of the response converted to <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TResponseBody</code>.\n"
  example: []
  syntax:
    content: public TResponseBody BodyAsType { get; }
    parameters: []
    return:
      type: '{TResponseBody}'
    content.vb: Public ReadOnly Property BodyAsType As TResponseBody
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType*
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsType
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString
  id: BodyAsString
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: BodyAsString
  nameWithType: ResponseObject<TResponseBody>.BodyAsString
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsString
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: BodyAsString
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 27
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe body of the response as <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string BodyAsString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BodyAsString As String
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString*
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsString
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsString
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream
  id: BodyAsStream
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: BodyAsStream
  nameWithType: ResponseObject<TResponseBody>.BodyAsStream
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsStream
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: BodyAsStream
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 32
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe body of the response as <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Stream BodyAsStream { get; }
    parameters: []
    return:
      type: System.IO.Stream
    content.vb: Public ReadOnly Property BodyAsStream As Stream
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream*
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsStream
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsStream
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode
  id: StatusCode
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: ResponseObject<TResponseBody>.StatusCode
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.StatusCode
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: StatusCode
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 37
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe <xref href=\"System.Net.HttpStatusCode\" data-throw-if-not-resolved=\"false\"></xref> of the response.\n"
  example: []
  syntax:
    content: public HttpStatusCode StatusCode { get; }
    parameters: []
    return:
      type: System.Net.HttpStatusCode
    content.vb: Public ReadOnly Property StatusCode As HttpStatusCode
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode*
  nameWithType.vb: ResponseObject(Of TResponseBody).StatusCode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).StatusCode
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  id: HttpResponseMessage
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: HttpResponseMessage
  nameWithType: ResponseObject<TResponseBody>.HttpResponseMessage
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HttpResponseMessage
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: HttpResponseMessage
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 42
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe entire <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public HttpResponseMessage HttpResponseMessage { get; }
    parameters: []
    return:
      type: System.Net.Http.HttpResponseMessage
    content.vb: Public ReadOnly Property HttpResponseMessage As HttpResponseMessage
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage*
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpResponseMessage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpResponseMessage
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  id: HttpRequestMessge
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: HttpRequestMessge
  nameWithType: ResponseObject<TResponseBody>.HttpRequestMessge
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HttpRequestMessge
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: HttpRequestMessge
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 50
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nThe entire <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> object for debugging purposes.\n"
  remarks: "\nIt will be null if <xref href=\"IdentityServer4.Contrib.HttpClientService.HttpClientService.Dispose\" data-throw-if-not-resolved=\"false\"></xref> is called for cleanup.\n"
  example: []
  syntax:
    content: public HttpRequestMessage HttpRequestMessge { get; }
    parameters: []
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public ReadOnly Property HttpRequestMessge As HttpRequestMessage
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge*
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpRequestMessge
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpRequestMessge
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError
  id: HasError
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: HasError
  nameWithType: ResponseObject<TResponseBody>.HasError
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HasError
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: HasError
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 55
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nA boolean indicating if there is an error in the current request.\n"
  example: []
  syntax:
    content: public bool HasError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasError As Boolean
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError*
  nameWithType.vb: ResponseObject(Of TResponseBody).HasError
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HasError
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error
  commentId: P:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error
  id: Error
  parent: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ResponseObject<TResponseBody>.Error
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.Error
  type: Property
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: Error
    path: ../src/IdentityServer4.Contrib.HttpClientService/Models/ResponseObject.cs
    startLine: 60
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Models
  summary: "\nA description of the error, if any.\n"
  example: []
  syntax:
    content: public string Error { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Error As String
  overload: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error*
  nameWithType.vb: ResponseObject(Of TResponseBody).Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).Error
references:
- uid: IdentityServer4.Contrib.HttpClientService.Models
  commentId: N:IdentityServer4.Contrib.HttpClientService.Models
  name: IdentityServer4.Contrib.HttpClientService.Models
  nameWithType: IdentityServer4.Contrib.HttpClientService.Models
  fullName: IdentityServer4.Contrib.HttpClientService.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.Headers.HttpResponseHeaders
  commentId: T:System.Net.Http.Headers.HttpResponseHeaders
  parent: System.Net.Http.Headers
  isExternal: true
  name: HttpResponseHeaders
  nameWithType: HttpResponseHeaders
  fullName: System.Net.Http.Headers.HttpResponseHeaders
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Headers
  name: Headers
  nameWithType: ResponseObject<TResponseBody>.Headers
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.Headers
  nameWithType.vb: ResponseObject(Of TResponseBody).Headers
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).Headers
- uid: System.Net.Http.Headers
  commentId: N:System.Net.Http.Headers
  isExternal: true
  name: System.Net.Http.Headers
  nameWithType: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsType
  name: BodyAsType
  nameWithType: ResponseObject<TResponseBody>.BodyAsType
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsType
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsType
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsType
- uid: '{TResponseBody}'
  commentId: '!:TResponseBody'
  definition: TResponseBody
  name: TResponseBody
  nameWithType: TResponseBody
  fullName: TResponseBody
- uid: TResponseBody
  commentId: '!:TResponseBody'
  name: TResponseBody
  nameWithType: TResponseBody
  fullName: TResponseBody
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsString
  name: BodyAsString
  nameWithType: ResponseObject<TResponseBody>.BodyAsString
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsString
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsString
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsString
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.BodyAsStream
  name: BodyAsStream
  nameWithType: ResponseObject<TResponseBody>.BodyAsStream
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.BodyAsStream
  nameWithType.vb: ResponseObject(Of TResponseBody).BodyAsStream
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).BodyAsStream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.StatusCode
  name: StatusCode
  nameWithType: ResponseObject<TResponseBody>.StatusCode
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.StatusCode
  nameWithType.vb: ResponseObject(Of TResponseBody).StatusCode
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).StatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpResponseMessage
  name: HttpResponseMessage
  nameWithType: ResponseObject<TResponseBody>.HttpResponseMessage
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HttpResponseMessage
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpResponseMessage
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpResponseMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: IdentityServer4.Contrib.HttpClientService.HttpClientService.Dispose
  commentId: M:IdentityServer4.Contrib.HttpClientService.HttpClientService.Dispose
  isExternal: true
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HttpRequestMessge
  name: HttpRequestMessge
  nameWithType: ResponseObject<TResponseBody>.HttpRequestMessge
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HttpRequestMessge
  nameWithType.vb: ResponseObject(Of TResponseBody).HttpRequestMessge
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HttpRequestMessge
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.HasError
  name: HasError
  nameWithType: ResponseObject<TResponseBody>.HasError
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.HasError
  nameWithType.vb: ResponseObject(Of TResponseBody).HasError
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).HasError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Models.ResponseObject`1.Error
  name: Error
  nameWithType: ResponseObject<TResponseBody>.Error
  fullName: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject<TResponseBody>.Error
  nameWithType.vb: ResponseObject(Of TResponseBody).Error
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Models.ResponseObject(Of TResponseBody).Error
