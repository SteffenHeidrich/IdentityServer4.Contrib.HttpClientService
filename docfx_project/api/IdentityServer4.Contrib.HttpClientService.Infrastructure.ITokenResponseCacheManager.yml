### YamlMime:ManagedReference
items:
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager
  commentId: T:IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager
  id: ITokenResponseCacheManager
  parent: IdentityServer4.Contrib.HttpClientService.Infrastructure
  children:
  - IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})
  - IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  langs:
  - csharp
  - vb
  name: ITokenResponseCacheManager
  nameWithType: ITokenResponseCacheManager
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager
  type: Interface
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: ITokenResponseCacheManager
    path: ../src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
    startLine: 12
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Infrastructure
  summary: "\nInterface for the cache manager for the access token service. \n"
  remarks: "\nIt caches a successful response for the 75% of the expiration time define in the <xref href=\"IdentityModel.Client.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: public interface ITokenResponseCacheManager
    content.vb: Public Interface ITokenResponseCacheManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})
  commentId: M:IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})
  id: AddOrGetExistingAsync(System.String,System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}})
  parent: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager
  langs:
  - csharp
  - vb
  name: AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  nameWithType: ITokenResponseCacheManager.AddOrGetExistingAsync(String, Func<Task<TokenResponse>>)
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String, System.Func<System.Threading.Tasks.Task<IdentityModel.Client.TokenResponse>>)
  type: Method
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: AddOrGetExistingAsync
    path: ../src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
    startLine: 20
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Infrastructure
  summary: "\nAdds a new <xref href=\"IdentityModel.Client.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref> in the cache by executing the <code data-dev-comment-type=\"paramref\" class=\"paramref\">call</code> parameter, or returns an existing cached response.\n"
  example: []
  syntax:
    content: Task<TokenResponse> AddOrGetExistingAsync(string key, Func<Task<TokenResponse>> call)
    parameters:
    - id: key
      type: System.String
      description: The key of the cache entry.
    - id: call
      type: System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}}
      description: The delegate the returns a <xref href="IdentityModel.Client.TokenResponse" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
      description: A <xref href="IdentityModel.Client.TokenResponse" data-throw-if-not-resolved="false"></xref>, either just aqcuired or from the cache
    content.vb: Function AddOrGetExistingAsync(key As String, call As Func(Of Task(Of TokenResponse))) As Task(Of TokenResponse)
  overload: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync*
  nameWithType.vb: ITokenResponseCacheManager.AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
  fullName.vb: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync(System.String, System.Func(Of System.Threading.Tasks.Task(Of IdentityModel.Client.TokenResponse)))
  name.vb: AddOrGetExistingAsync(String, Func(Of Task(Of TokenResponse)))
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  commentId: M:IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  id: Remove(System.String)
  parent: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: ITokenResponseCacheManager.Remove(String)
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
      branch: master
      repo: https://github.com/georgekosmidis/IdentityServer4.HttpClientService.git
    id: Remove
    path: ../src/IdentityServer4.Contrib.HttpClientService/Infrastructure/ITokenResponseCacheManager.cs
    startLine: 26
  assemblies:
  - IdentityServer4.Contrib.HttpClientService
  namespace: IdentityServer4.Contrib.HttpClientService.Infrastructure
  summary: "\nRemoves an entry from the cache\n"
  example: []
  syntax:
    content: void Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the cache entry.
    content.vb: Sub Remove(key As String)
  overload: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove*
references:
- uid: IdentityModel.Client.TokenResponse
  commentId: T:IdentityModel.Client.TokenResponse
  isExternal: true
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure
  commentId: N:IdentityServer4.Contrib.HttpClientService.Infrastructure
  name: IdentityServer4.Contrib.HttpClientService.Infrastructure
  nameWithType: IdentityServer4.Contrib.HttpClientService.Infrastructure
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync
  name: AddOrGetExistingAsync
  nameWithType: ITokenResponseCacheManager.AddOrGetExistingAsync
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.AddOrGetExistingAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}}
  commentId: T:System.Func{System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}}
  parent: System
  definition: System.Func`1
  name: Func<Task<TokenResponse>>
  nameWithType: Func<Task<TokenResponse>>
  fullName: System.Func<System.Threading.Tasks.Task<IdentityModel.Client.TokenResponse>>
  nameWithType.vb: Func(Of Task(Of TokenResponse))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of IdentityModel.Client.TokenResponse))
  name.vb: Func(Of Task(Of TokenResponse))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{IdentityModel.Client.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<IdentityModel.Client.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of IdentityModel.Client.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityModel.Client.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: IdentityModel.Client.TokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove*
  commentId: Overload:IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove
  name: Remove
  nameWithType: ITokenResponseCacheManager.Remove
  fullName: IdentityServer4.Contrib.HttpClientService.Infrastructure.ITokenResponseCacheManager.Remove
